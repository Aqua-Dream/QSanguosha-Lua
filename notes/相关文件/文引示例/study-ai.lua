--[[是否发动技能的AI]]----[[现在不用这一种写法了，注释掉sgs.ai_skill_invoke.LuaBianshen = true]]----[[现在我们这样写：]]--sgs.ai_skill_invoke.LuaBianshen = function(self, data)	local source = self.player --这句话用于获取当前玩家	if source:hasSkill("xiaoji") then		return true	end	return falseend--[[特征信息：]]--sgs.ai_chaofeng.sunwukong = 5 --嘲讽值sgs.sunwukong_keep_value = --卡牌保留值{	peach = 8, --桃子，猴子都喜欢吃！	duel = 6, --决斗，展现出孙悟空神威的一面！}--[[	编者注：以上为学习手册中出现的部分，下面是本扩展包中其它技能的AI代码。]]----[[齐天大圣・孙悟空]]----[[	技能：美王	描述：摸牌阶段，你可以额外摸十张牌。	策略：始终发动。]]--sgs.ai_skill_invoke.LuaMeihouWang = true--[[	技能：灭妖	描述：每当你对一名角色造成一次伤害后，你可以令该角色增加1点体力上限。	策略：伤害对象是自己人时发动。]]--sgs.ai_skill_invoke.LuaMieyao = function(self, data)--DamageStruct	local damage = data:toDamage()	local target = damage.to	return self:isFriend(target)end--[[	技能：休息	描述：回合结束阶段开始时，你需将武将牌翻面，否则你进行一个额外的回合。	策略：始终发动（即始终选择翻面，要不就没法让别人玩了）。]]--sgs.ai_skill_invoke.LuaXiuxi = function(self, data)	return trueend--[[	技能：挖角	描述：弃牌阶段开始时，你可以将一名角色装备区内的防具牌置入你的装备区。	策略：存在装备防具的敌人时发动。在装备防具的敌人中优先选择体力最少的敌人作为发动目标。]]--sgs.ai_skill_invoke.LuaWajiao = function(self, data)	local destlist = self.enemies	for _,enemy in ipairs(destlist) do		local armor = enemy:getArmor()		if armor then			return true		end	end	return falseendsgs.ai_skill_playerchosen.LuaWajiao = function(self, players)	local destlist = self.enemies	self:sort(destlist, "hp")	for _,enemy in ipairs(destlist) do		local armor = enemy:getArmor()		if armor then			return enemy		end	endend--[[斗战胜佛・孙悟空]]--sgs.ai_chaofeng.fosunwukong = 5 --嘲讽值sgs.fosunwukong_keep_value = --卡牌保留值{	peach = 8, --桃子，猴子都喜欢吃！	duel = 6, --决斗，展现出孙悟空神威的一面！}--[[	技能：极乐	描述：判定阶段开始时，你可以弃置所有的“斗胜”标记（至少1枚），令所有其他角色各失去1点体力。	策略：若自己不是反贼，那么主公虚弱时不发动；当己方虚弱的人数少于敌方虚弱的人数时发动。]]--sgs.ai_skill_invoke.LuaJile = function(self, data)	local player = self.player	local room = self.room	local lord = room:getLord()	if self.role ~= "rebel" and self:isWeak(lord) then		return false	end	local list = room:getOtherPlayers(player)	local benefit = 0	for _, player in sgs.qlist(list) do		if self:isWeak(player) then			if self:isFriend(player) then 				benefit = benefit - 1			else 				benefit = benefit + 1			end		end	end	if benefit <= 0 then		return false	end	return trueend--[[	技能：斗佛	描述：你可以将一张牌当作【决斗】使用。	策略：选择使用价值最小的牌（但使用价值要不超过决斗本身）发动。]]--LuaDoufo_skill = {}LuaDoufo_skill.name = "LuaDoufo"table.insert(sgs.ai_skills, LuaDoufo_skill)LuaDoufo_skill.getTurnUseCard = function(self)	local cards = self.player:getCards("he")	cards = sgs.QList2Table(cards)	self:sortByUseValue(cards, true)	local card = cards[1]	if self:getUseValue(card) > sgs.ai_use_value.Duel then		return nil	end	local suit = card:getSuitString()	local number = card:getNumberString()	local card_id = card:getEffectiveId()	local card_str = ("duel:LuaDoufo[%s:%s]=%d"):format(suit, number, card_id)	local duel = sgs.Card_Parse(card_str)	assert(duel)	return duelend--[[	技能：浮云	描述：你可以将一张手牌当作【闪】使用或打出。	策略：选择手牌发动。]]--sgs.ai_view_as.LuaFuyun = function(card, player, card_place)    local suit = card:getSuitString()    local number = card:getNumberString()    local card_id = card:getEffectiveId()    if card_place ~= sgs.Player_PlaceEquip then        return ("jink:LuaFuyun[%s:%s]=%d"):format(suit, number, card_id)    endend--[[	技能：自修	描述：摸牌阶段，你可以额外摸等同于你当前手牌数的牌。	策略：始终发动。]]--sgs.ai_skill_invoke.LuaZixiu = true--[[	技能：引渡（未完成）	描述：每当你对一名角色造成一次伤害后，你可以获得其一张牌，然后该角色摸两张牌。	策略：（目前是不发动）]]--sgs.ai_skill_invoke.LuaYindu = function(self, data)	return falseend--[[	技能：示范	描述：出牌阶段，你可以弃置一张黑桃牌并选择一名角色，你和该角色各摸两张牌。	策略：（目前没有策略）]]----[[	技能：斗法	描述：出牌阶段，你可以摸一张牌并进行一次判定，若结果为黑桃，你将武将牌翻面并恢复1点体力，否则你弃置一张牌。	策略：当自己受伤时发动。选择保留价值最低的牌弃置。]]--LuaDoufa_skill = {}LuaDoufa_skill.name = "LuaDoufa"table.insert(sgs.ai_skills, LuaDoufa_skill)LuaDoufa_skill.getTurnUseCard = function(self)	local player = self.player	return player:getLostHp() > 0 endsgs.ai_skill_discard.LuaDoufa = function(self, discard_num, min_num, optional, include_equip)	local to_discard = {}	local cards = self.player:getCards("he")	cards = sgs.QList2Table(cards)	self:sortByKeepValue(cards, true)	local card = cards[1]	table.insert(to_discard, card:getEffectiveId())	return to_discardend--[[	技能：引导（未完成）	描述：一名角色的判定牌生效前，你可以打出一张牌代替之。	策略：照抄鬼才的策略（目前不能发动）。]]--sgs.ai_skill_invoke.LuaYindao = function(self, data)--JudgeStruct	local judge = data:toJudge()	local victim = judge.who	if self:isFriend(victim) then		return judge:isBad()	else		return judge:isGood()	endendsgs.ai_skill_cardask["@LuaYindao"] = function(self, data)    local judge = data:toJudge()    if self:needRetrial(judge) then		local cards = self.player:getCards("he")        cards = sgs.QList2Table(cards)        local card_id = self:getRetrialCardId(cards, judge)        local card = sgs.Sanguosha:getCard(card_id)        if card_id ~= -1 then            return "@LuaYindao[" .. card:getSuitString() .. ":" .. card:getNumberString() .. "]=" .. card_id        end    end    return "."endsgs.ai_use_value.YindaoCard = 3--[[	技能：佛光	描述：每当你造成或受到1点伤害后，你可以摸一张牌并将其置于你的武将牌上，称为“光”（最多5张）。	策略：始终发动。]]--sgs.ai_skill_invoke.LuaFoguang = true--[[	技能：普照	描述：出牌阶段，你可以弃一张“光”并选择场上一名角色，该角色摸X张牌。X为这张“光”的点数的一半（向上取整）。	策略：在有自己人手牌数目没达到体力上限时发动。选择己方手牌最少的人发动。弃掉点数最大的“光”。]]--LuaPuzhao_skill = {}LuaPuzhao_skill.name = "LuaPuzhao"table.insert(sgs.ai_skills, LuaPuzhao_skill)LuaPuzhao_skill.getTurnUseCard = function(self)	local light = self.player:getPile("light")	if light:length() <= 0 then		return nil	end	local targets = self.friends	for _,p in ipairs(targets) do		if (p:getHandcardNum()<p:getMaxHp()) and not p:hasSkill("manjuan") then			local parse = sgs.Card_Parse("#PuzhaoCard:.:")			assert(parse ~= nil)			return parse		end	endendsgs.ai_skill_use_func["#PuzhaoCard"] = function(card, use, self)	use.card = sgs.Card_Parse("#PuzhaoCard:.:")endsgs.ai_skill_playerchosen.LuaPuzhao = function(self, targets)	local tos = {}	for _, target in sgs.qlist(targets) do		if self:isFriend(target) and not target:hasSkill("manjuan") then			table.insert(tos, target)		end	end 	if #tos > 0 then		self:sort(tos, "handcard")		return tos[1]	endendsgs.ai_skill_askforag.LuaPuzhao = function(self, card_ids)	local id = 0	local minpoint = 20	for i, card_id in ipairs(card_ids) do		local card = sgs.Sanguosha:getCard(card_id)		local point = card:getNumber()		if point < minpoint then			id = card_id			minpoint = point		end	end	if id > 0 then		return id	end	return card_ids[1]endsgs.ai_use_value.PuzhaoCard = 4--[[美猴王・孙悟空]]--sgs.ai_chaofeng.xiaosunwukong = 5 --嘲讽值sgs.xiaosunwukong_keep_value = --卡牌保留值{	peach = 8, --桃子，猴子都喜欢吃！	duel = 6, --决斗，展现出孙悟空神威的一面！}--[[	技能：号令	描述：出牌阶段，你可以选择一名其他角色，视为对其使用一张【杀】。每阶段限一次。	策略：存在可杀的敌方时发动。对敌方可杀的防御力最弱的角色使用。]]--LuaHaoling_skill = {}LuaHaoling_skill.name = "LuaHaoling"table.insert(sgs.ai_skills, LuaHaoling_skill)LuaHaoling_skill.getTurnUseCard = function(self)	local player = self.player	if player:hasUsed("#HaolingCard") then		return nil	end	for _,enemy in ipairs(self.enemies) do		if player:canSlash(enemy, nil, false) then			local parse = sgs.Card_Parse("#HaolingCard:.:")			assert (parse ~= nil)			return parse		end	end	return nilendsgs.ai_skill_use_func["#HaolingCard"] = function(card, use, self)	local player = self.player	local targets = self.enemies	self:sort(targets, "defense")	for _,enemy in ipairs(targets) do		if player:canSlash(enemy, nil, false) then			if self:slashIsEffective(card, enemy) then				use.card = card				if use.to then					use.to:append(enemy)				end				return			end		end	endend--[[	技能：兵丁	描述：每当你需要使用一张【闪】时，可以视为你使用了一张【闪】。	策略：始终发动。]]--sgs.ai_skill_invoke.LuaBingding = true--[[	技能：积蓄	描述：摸牌阶段，你可以少摸一张牌并进行一次判定，若结果为基本牌,则回合结束阶段开始时,你可以摸X张牌，其中X为此基本牌的点数。	策略：始终发动。]]--sgs.ai_skill_invoke.LuaJixu = true--[[	技能：护卫	描述：一名其他角色进入濒死状态时，你可以失去1点体力并摸一张牌，令其恢复1点体力。	策略：在自己体力不少于2时，若濒死角色是自己人则发动。]]--sgs.ai_skill_invoke.LuaHuwei = function(self, data)--DyingStruct	local player = self.player	local hp = player:getHp()	if hp < 2 then		return false	end	local dying = data:toDying()	local target = dying.who	return self:isFriend(target)end--[[	技能：筋斗（未完成）	描述：出牌阶段，你可以交换两名角色的位置。	策略：让最靠后的自己人和最靠前的敌人换位置。（现在还没有终止条件，游戏时会出现死循环）]]--LuaJindou_skill = {}LuaJindou_skill.name = "LuaJindou"--table.insert(sgs.ai_skills, LuaJindou_skill)LuaJindou_skill.getTurnUseCard = function(self)	return --终止	if self.room:alivePlayerCount() == 2 or self.role == "renegade" then		return	end	local parse = sgs.Card_Parse("#JindouCard:.:")	assert(parse ~= nil)	return parseendsgs.ai_skill_use_func["#JindouCard"] = function(card, use, self)	local enemy	local friend	local targets = self.room:getAlivePlayers()	for _,p in sgs.qlist(targets) do		if self:isFriend(p) then			friend = p		else			if not enemy then				enemy = p			end		end	end	if friend and enemy then		use.card = card		if use.to then			use.to:append(enemy)			use.to:append(friend)		end	endend--[[	技能：猴王（主公技）	描述：出牌阶段结束后执行额外的X个出牌阶段。X为当时场上存活的其他群雄角色的数目。	策略：只有自己是主公时才能发动；手牌数目超过体力值时发动。]]--sgs.ai_skill_invoke.LuaHouwang = function(self, data)	if self.role ~= "lord" then		return false	end	local player = self.player	local cardnum = player:getHandcardNum()	local hp = player:getHp()	return hp < cardnumend--[[	技能：扬名（主公技）	描述：其他群雄角色每回复1点体力，可以让你摸一张牌。]]----[[强力技能]]----[[	技能：重生	描述：每当有其他角色死亡时，你可以令其复活。]]--sgs.ai_skill_invoke.LuaChongsheng = function(self, data)	return falseend--[[	技能：至尊	描述：你赢了。]]----[[	编者注：下面是对一些技能产生的问题所需的AI函数的总结。实际上这些AI需求可以从smart-ai.lua中找到。]]----[[	技能问题：询问观星	技能代码：room:askForGuanxing	AI需求：无（已有guanxing-ai.lua专门处理观星问题）]]----[[	技能问题：询问卡牌花色	技能代码：room:askForSuit	AI需求：sgs.ai_skill_suit.技能名	函数原型：function()	应答类型：数值（表示花色代号）	参考技能：反间]]----[[	技能问题：询问国籍选择	技能代码：room:askForKingdom	AI需求：无（神将选择国籍已有处理方法）]]----[[	技能问题：询问技能发动	技能代码：room:askForSkillInvoke	AI需求：sgs.ai_skill_invoke.技能名	函数原型：function(self, data)	应答类型：true或false	参考技能：护驾]]----[[	技能问题：询问选择	技能代码：room:askForChoice	AI需求：sgs.ai_skill_choice.技能名	函数原型：function(self, choices)	应答类型：字符串	参考技能：五灵]]----[[	技能问题：询问弃牌	技能代码：room:askForDiscard	AI需求：sgs.ai_skill_discard.技能名	函数原型：function(self, discard_num, min_num, optional, include_equip)	应答类型：表（含有所有要弃掉的卡牌编号）	参考技能：刚烈]]----[[	技能问题：询问要交换的牌	技能代码：room:askForExchange	AI需求：未知（编者：才疏学浅请包涵）]]----[[	技能问题：询问无懈可击	技能代码：room:askForNullification	AI需求：未知（编者：才疏学浅请包涵）]]----[[	技能问题：询问卡牌选择	技能代码：room:askForCardChosen	AI需求：sgs.ai_skill_cardchosen.技能名	函数原型：function(self, who, flags)	应答类型：卡牌对象	参考技能：巧变]]----[[	技能问题：询问打出牌	技能代码：room:askForCard	AI需求：sgs.ai_skill_cardask["@所需卡牌类型"]	函数原型：function(self, data, pattern, target)	应答类型：字符串	参考技能：鬼才]]----[[	技能问题：询问使用牌	技能代码：room:askForUseCard	AI需求：未知（编者：才疏学浅请包涵）]]----[[	技能问题：询问使用杀	技能代码：room:askForUseSlashTo	AI需求：未知（编者：才疏学浅请包涵）]]----[[	技能问题：询问选择五谷丰登中的牌	技能代码：room:askForAG	AI需求：sgs.ai_skill_askforag.技能名	函数原型：function(self, card_ids)	应答类型：数值（表示卡牌编号）	参考技能：不屈]]----[[	技能问题：询问展示牌	技能代码：room:askForCardShow	AI需求：sgs.ai_cardshow.技能名	函数原型：function(self, requestor)	应答类型：卡牌对象	参考技能：乐学]]----[[	技能问题：询问遗计	技能代码：room:askForYiji	AI需求：无（遗计技能专用）]]----[[	技能问题：询问打出牌以拼点	技能代码：room:askForPindian	AI需求：sgs.ai_skill_pindian.技能名	函数原型：function(minusecard, self, requestor)	应答类型：卡牌对象	参考技能：天义]]----[[	技能问题：询问目标选择	技能代码：room:askForPlayerChosen	AI需求：sgs.ai_skill_playerchosen.技能名	函数原型：function(self, targets)	应答类型：玩家对象	参考技能：武魂]]----[[	技能问题：询问武将选择	技能代码：room:askForGeneral	AI需求：无（开场选择武将已有处理方法）]]----[[	技能问题：询问出桃	技能代码：room:askForSinglePeach	AI需求：无（响应求桃已有处理方法）]]--